buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.0'
	id 'io.spring.dependency-management' version '1.1.0'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.vivid'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.apache.commons:commons-lang3'
	implementation 'org.aspectj:aspectjweaver'
	implementation 'org.jsoup:jsoup:1.15.3'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'mysql:mysql-connector-java'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'

	implementation 'org.springframework.data:spring-data-jpa'
	implementation 'org.hibernate:hibernate-core'

	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

//	implementation 'co.elastic.clients:elasticsearch-java:8.2.3'
	implementation 'jakarta.json:jakarta.json-api:2.0.1'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = 'dream.jar'
}

def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}