name: CI/CD Docker

on:
  push:
    branches: [ master ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/vivid
  VERSION: ${{ github.sha }}
  NAME: dream

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ls -al
        run: |
          ls -al

      - name: make application.yml
        run: |
          touch ./src/main/resources/application.yml
          echo "${{secrets.APPLICATION}}" > ./src/main/resources/application.yml
          pwd

      - uses: actions/upload-artifact@v2
        with:
          name: application.yml
          path: ./src/main/resources/application.yml

      - name: ls -al2
        run: |
          cat ./src/main/resources/application.yml
          ls -al
          pwd

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: ls -al3
        run: |
          cat ./src/main/resources/application.yml
          ls -al
          pwd

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DREAM_TOKEN }}

      - name: ls -al4
        run: |
          cat ./src/main/resources/application.yml
          ls -al
          pwd

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: ls -al5
        run: |
          cat ./src/main/resources/application.yml
          ls -al
          pwd

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      - name: env echo
        run: |
          echo ${{ env.DOCKER_IMAGE }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-go ]
    steps:

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DREAM_TOKEN }}

      - name: Docker run
        run: |
          docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 8080:8080 --name ${{ env.NAME }} --restart always ${{ env.DOCKER_IMAGE }}:latest
